// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v4.25.3
// source: scans/scan.ASCA

package scans

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScanResult_Error_ErrorCode int32

const (
	ScanResult_Error_UNKNOWN_ERROR   ScanResult_Error_ErrorCode = 0
	ScanResult_Error_INVALID_REQUEST ScanResult_Error_ErrorCode = 1
	ScanResult_Error_INTERNAL_ERROR  ScanResult_Error_ErrorCode = 2 // Add more specific error codes as needed.
)

// Enum value maps for ScanResult_Error_ErrorCode.
var (
	ScanResult_Error_ErrorCode_name = map[int32]string{
		0: "UNKNOWN_ERROR",
		1: "INVALID_REQUEST",
		2: "INTERNAL_ERROR",
	}
	ScanResult_Error_ErrorCode_value = map[string]int32{
		"UNKNOWN_ERROR":   0,
		"INVALID_REQUEST": 1,
		"INTERNAL_ERROR":  2,
	}
)

func (x ScanResult_Error_ErrorCode) Enum() *ScanResult_Error_ErrorCode {
	p := new(ScanResult_Error_ErrorCode)
	*p = x
	return p
}

func (x ScanResult_Error_ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScanResult_Error_ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_scans_scan_proto_enumTypes[0].Descriptor()
}

func (ScanResult_Error_ErrorCode) Type() protoreflect.EnumType {
	return &file_scans_scan_proto_enumTypes[0]
}

func (x ScanResult_Error_ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScanResult_Error_ErrorCode.Descriptor instead.
func (ScanResult_Error_ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_scans_scan_proto_rawDescGZIP(), []int{2, 1, 0}
}

// Represents a request to perform a scan.
type ScanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FileName   string `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`       // Name of the file being scanned.
	SourceCode string `protobuf:"bytes,3,opt,name=source_code,json=sourceCode,proto3" json:"source_code,omitempty"` // Source code content to be scanned.
}

func (x *ScanRequest) Reset() {
	*x = ScanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scans_scan_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanRequest) ProtoMessage() {}

func (x *ScanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scans_scan_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanRequest.ProtoReflect.Descriptor instead.
func (*ScanRequest) Descriptor() ([]byte, []int) {
	return file_scans_scan_proto_rawDescGZIP(), []int{0}
}

func (x *ScanRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ScanRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *ScanRequest) GetSourceCode() string {
	if x != nil {
		return x.SourceCode
	}
	return ""
}

// Represents a single scan request.
type SingleScanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScanRequest *ScanRequest `protobuf:"bytes,1,opt,name=scan_request,json=scanRequest,proto3" json:"scan_request,omitempty"`
}

func (x *SingleScanRequest) Reset() {
	*x = SingleScanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scans_scan_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleScanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleScanRequest) ProtoMessage() {}

func (x *SingleScanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scans_scan_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleScanRequest.ProtoReflect.Descriptor instead.
func (*SingleScanRequest) Descriptor() ([]byte, []int) {
	return file_scans_scan_proto_rawDescGZIP(), []int{1}
}

func (x *SingleScanRequest) GetScanRequest() *ScanRequest {
	if x != nil {
		return x.ScanRequest
	}
	return nil
}

// Represents the result of a scan.
type ScanResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId   string                   `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Status      bool                     `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`                             // Indicates whether the scan was successful.
	Message     string                   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`                            // Additional message in case of error.
	ScanDetails []*ScanResult_ScanDetail `protobuf:"bytes,4,rep,name=scan_details,json=scanDetails,proto3" json:"scan_details,omitempty"` // Details of vulnerabilities found.
	Error       *ScanResult_Error        `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`                                // Error details in case of failure.
}

func (x *ScanResult) Reset() {
	*x = ScanResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scans_scan_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanResult) ProtoMessage() {}

func (x *ScanResult) ProtoReflect() protoreflect.Message {
	mi := &file_scans_scan_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanResult.ProtoReflect.Descriptor instead.
func (*ScanResult) Descriptor() ([]byte, []int) {
	return file_scans_scan_proto_rawDescGZIP(), []int{2}
}

func (x *ScanResult) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *ScanResult) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *ScanResult) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ScanResult) GetScanDetails() []*ScanResult_ScanDetail {
	if x != nil {
		return x.ScanDetails
	}
	return nil
}

func (x *ScanResult) GetError() *ScanResult_Error {
	if x != nil {
		return x.Error
	}
	return nil
}

// Represents details of a vulnerability found during scanning.
type ScanResult_ScanDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuleId            uint32 `protobuf:"varint,1,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	Language          string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	RuleName          string `protobuf:"bytes,3,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
	Severity          string `protobuf:"bytes,4,opt,name=severity,proto3" json:"severity,omitempty"`
	FileName          string `protobuf:"bytes,5,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Line              uint32 `protobuf:"varint,6,opt,name=line,proto3" json:"line,omitempty"`
	Length            uint32 `protobuf:"varint,7,opt,name=length,proto3" json:"length,omitempty"`
	ProblematicLine   string `protobuf:"bytes,8,opt,name=problematicLine,proto3" json:"problematicLine,omitempty"`
	RemediationAdvise string `protobuf:"bytes,9,opt,name=remediationAdvise,proto3" json:"remediationAdvise,omitempty"`
	Description       string `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ScanResult_ScanDetail) Reset() {
	*x = ScanResult_ScanDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scans_scan_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanResult_ScanDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanResult_ScanDetail) ProtoMessage() {}

func (x *ScanResult_ScanDetail) ProtoReflect() protoreflect.Message {
	mi := &file_scans_scan_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanResult_ScanDetail.ProtoReflect.Descriptor instead.
func (*ScanResult_ScanDetail) Descriptor() ([]byte, []int) {
	return file_scans_scan_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ScanResult_ScanDetail) GetRuleId() uint32 {
	if x != nil {
		return x.RuleId
	}
	return 0
}

func (x *ScanResult_ScanDetail) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *ScanResult_ScanDetail) GetRuleName() string {
	if x != nil {
		return x.RuleName
	}
	return ""
}

func (x *ScanResult_ScanDetail) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *ScanResult_ScanDetail) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *ScanResult_ScanDetail) GetLine() uint32 {
	if x != nil {
		return x.Line
	}
	return 0
}

func (x *ScanResult_ScanDetail) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *ScanResult_ScanDetail) GetProblematicLine() string {
	if x != nil {
		return x.ProblematicLine
	}
	return ""
}

func (x *ScanResult_ScanDetail) GetRemediationAdvise() string {
	if x != nil {
		return x.RemediationAdvise
	}
	return ""
}

func (x *ScanResult_ScanDetail) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Represents an error that occurred during scanning.
type ScanResult_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        ScanResult_Error_ErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=cx.microsast.service.v1.scan.ScanResult_Error_ErrorCode" json:"code,omitempty"` // Error code indicating the type of error.
	Description string                     `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`                                                 // Description of the error.
}

func (x *ScanResult_Error) Reset() {
	*x = ScanResult_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scans_scan_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanResult_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanResult_Error) ProtoMessage() {}

func (x *ScanResult_Error) ProtoReflect() protoreflect.Message {
	mi := &file_scans_scan_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanResult_Error.ProtoReflect.Descriptor instead.
func (*ScanResult_Error) Descriptor() ([]byte, []int) {
	return file_scans_scan_proto_rawDescGZIP(), []int{2, 1}
}

func (x *ScanResult_Error) GetCode() ScanResult_Error_ErrorCode {
	if x != nil {
		return x.Code
	}
	return ScanResult_Error_UNKNOWN_ERROR
}

func (x *ScanResult_Error) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_scans_scan_proto protoreflect.FileDescriptor

var file_scans_scan_proto_rawDesc = []byte{
	0x0a, 0x10, 0x73, 0x63, 0x61, 0x6e, 0x73, 0x2f, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x1c, 0x63, 0x78, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x61, 0x73, 0x74,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x63, 0x61, 0x6e,
	0x22, 0x5b, 0x0a, 0x0b, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x61, 0x0a,
	0x11, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x4c, 0x0a, 0x0c, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x78, 0x2e, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x73, 0x61, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x0b, 0x73, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0xfe, 0x05, 0x0a, 0x0a, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x56, 0x0a, 0x0c, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x78, 0x2e, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x73, 0x61, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x2e, 0x53, 0x63, 0x61, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0b, 0x73, 0x63, 0x61,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x44, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x78, 0x2e, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x73, 0x61, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xbd,
	0x02, 0x0a, 0x0a, 0x53, 0x63, 0x61, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x17, 0x0a,
	0x07, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x72, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x61,
	0x74, 0x69, 0x63, 0x4c, 0x69, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x2c,
	0x0a, 0x11, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x76,
	0x69, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x76, 0x69, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xc0,
	0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x63, 0x78, 0x2e, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x73, 0x61, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x47, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x01, 0x12, 0x12, 0x0a,
	0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x02, 0x32, 0x70, 0x0a, 0x0b, 0x53, 0x63, 0x61, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x61, 0x0a, 0x04, 0x53, 0x63, 0x61, 0x6e, 0x12, 0x2f, 0x2e, 0x63, 0x78, 0x2e, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x73, 0x61, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x53, 0x63,
	0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x78, 0x2e, 0x6d,
	0x69, 0x63, 0x72, 0x6f, 0x73, 0x61, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6d, 0x61, 0x72, 0x78, 0x64, 0x65, 0x76, 0x2f, 0x63,
	0x78, 0x63, 0x6f, 0x64, 0x65, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x73, 0x63, 0x61, 0x6e, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_scans_scan_proto_rawDescOnce sync.Once
	file_scans_scan_proto_rawDescData = file_scans_scan_proto_rawDesc
)

func file_scans_scan_proto_rawDescGZIP() []byte {
	file_scans_scan_proto_rawDescOnce.Do(func() {
		file_scans_scan_proto_rawDescData = protoimpl.X.CompressGZIP(file_scans_scan_proto_rawDescData)
	})
	return file_scans_scan_proto_rawDescData
}

var file_scans_scan_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_scans_scan_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_scans_scan_proto_goTypes = []interface{}{
	(ScanResult_Error_ErrorCode)(0), // 0: cx.microsast.service.v1.scan.ScanResult.Error.ErrorCode
	(*ScanRequest)(nil),             // 1: cx.microsast.service.v1.scan.ScanRequest
	(*SingleScanRequest)(nil),       // 2: cx.microsast.service.v1.scan.SingleScanRequest
	(*ScanResult)(nil),              // 3: cx.microsast.service.v1.scan.ScanResult
	(*ScanResult_ScanDetail)(nil),   // 4: cx.microsast.service.v1.scan.ScanResult.ScanDetail
	(*ScanResult_Error)(nil),        // 5: cx.microsast.service.v1.scan.ScanResult.Error
}
var file_scans_scan_proto_depIdxs = []int32{
	1, // 0: cx.microsast.service.v1.scan.SingleScanRequest.scan_request:type_name -> cx.microsast.service.v1.scan.ScanRequest
	4, // 1: cx.microsast.service.v1.scan.ScanResult.scan_details:type_name -> cx.microsast.service.v1.scan.ScanResult.ScanDetail
	5, // 2: cx.microsast.service.v1.scan.ScanResult.error:type_name -> cx.microsast.service.v1.scan.ScanResult.Error
	0, // 3: cx.microsast.service.v1.scan.ScanResult.Error.code:type_name -> cx.microsast.service.v1.scan.ScanResult.Error.ErrorCode
	2, // 4: cx.microsast.service.v1.scan.ScanService.Scan:input_type -> cx.microsast.service.v1.scan.SingleScanRequest
	3, // 5: cx.microsast.service.v1.scan.ScanService.Scan:output_type -> cx.microsast.service.v1.scan.ScanResult
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_scans_scan_proto_init() }
func file_scans_scan_proto_init() {
	if File_scans_scan_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_scans_scan_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scans_scan_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleScanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scans_scan_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scans_scan_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanResult_ScanDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scans_scan_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanResult_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_scans_scan_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_scans_scan_proto_goTypes,
		DependencyIndexes: file_scans_scan_proto_depIdxs,
		EnumInfos:         file_scans_scan_proto_enumTypes,
		MessageInfos:      file_scans_scan_proto_msgTypes,
	}.Build()
	File_scans_scan_proto = out.File
	file_scans_scan_proto_rawDesc = nil
	file_scans_scan_proto_goTypes = nil
	file_scans_scan_proto_depIdxs = nil
}
