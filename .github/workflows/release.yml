name: AST Cli Release

on:
  push:
    tags:
      - "*"

jobs:
  build:
    runs-on: macos-latest
    env:
      AC_PASSWORD: ${{ secrets.AC_PASSWORD }}
      APPLE_DEVELOPER_CERTIFICATE_P12_BASE64: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_P12_BASE64 }}
      APPLE_DEVELOPER_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
           fetch-depth: 0
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: '^1.17.1'
      - name: Import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v1
        with:
          # The certificates in a PKCS12 file encoded as a base64 string
          p12-file-base64: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_P12_BASE64 }}
          # The password used to import the PKCS12 file.
          p12-password: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_PASSWORD }}
      - name: Updating and upgrading brew
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          brew --version
      - name: Install gon
        run: |
          brew tap mitchellh/gon
          brew install mitchellh/gon/gon
      - name: Install and start docker
        uses: docker-practice/actions-setup-docker@master
      - name: Cleanup docker installation
        run: |
          rm docker.rb
      - name: Test docker
        run: |
          docker version
          docker info
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Clean
        run: |
          rm default.profraw
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          version: latest
          args: release --rm-dist --debug
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GO_BOT_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  notify:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Get latest relase notes
        id: release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          body_release="$(gh api -H "Accept: application/vnd.github.v3+json" /repos/Checkmarx/ast-cli/releases/latest | jq -r '.body' )"
          body_release="${body_release//$'\n'/'%0A'}"
          echo "::set-output name=body_release::$body_release"

      - name: Converts Markdown to HTML
        id: convert
        uses: lifepal/markdown-to-html@v1.1
        with:
          text: "${{ steps.release.outputs.body_release }}"

      - name: Clean html
        id: clean
        run: |
          clean="$(echo "${{ steps.convert.outputs.html }}" | awk '{gsub(/id=.[a-z]+/,"");print}' | tr -d '\n')"
          echo "$clean"
          echo "::set-output name=clean::$clean"

      - name: Send a Notification
        id: notify
        uses: thechetantalwar/teams-notify@v2
        with:
          teams_webhook_url: ${{ secrets.TEAMS_WEBHOOK_URI }}
          message: "${{ steps.clean.outputs.clean }}"
